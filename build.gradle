buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.5.4"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2"
    }
}


plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'antlr'
    id 'maven'
    id 'signing'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'net.researchgate.release' version '2.6.0'
    id 'io.codearte.nexus-staging' version '0.21.1'
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    excludes: [
                            '**/sql/parser/**',
                            '**/Immutable*Condition.class',
                            '**/CompileDebugger.class'
                    ])
        })
    }
}

group 'net.ninjacat'
version '0.1.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.immutables:value:2.7.4'
    annotationProcessor 'org.immutables:value:2.7.4'

    implementation 'net.jcip:jcip-annotations:1.0'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.ow2.asm:asm:7.1'
    implementation 'org.ow2.asm:asm-commons:7.1'
    implementation 'org.ow2.asm:asm-util:7.1'
    implementation 'io.vavr:vavr:1.0.0-alpha-3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.0.1'

    antlr 'org.antlr:antlr4:4.7.2'

    testCompileOnly 'org.immutables:value:2.7.4'
    testAnnotationProcessor 'org.immutables:value:2.7.4'

    testImplementation 'org.hamcrest:hamcrest:2.1'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}
//
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            pom.project {
//                name 'Example Application'
//                packaging 'jar'
//                // optionally artifactId can be defined here
//                description 'A application used as an example on how to set up pushing  its components to the Central Repository.'
//                url 'http://www.example.com/example-application'
//
//                scm {
//                    connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
//                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
//                    url 'http://foo.googlecode.com/svn/trunk/'
//                }
//
//                licenses {
//                    license {
//                        name 'The Apache License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id 'manfred'
//                        name 'Manfred Moser'
//                        email 'manfred@sonatype.com'
//                    }
//                }
//            }
//        }
//    }
//}